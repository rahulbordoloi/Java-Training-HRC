package com.highradius;

import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.json.JSONObject;
import com.google.gson.Gson;

@WebServlet("/AddData")
public class AddData extends HttpServlet {
	private static final long serialVersionUID = 1L;

    public AddData() {
        super();
        // TODO Auto-generated constructor stub
    }
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		System.out.println("Calling AddData Servlet...");
		
		// Reading in Data from Request
		String title = request.getParameter("movieTitle");
		String description = request.getParameter("movieDescription");
		long releaseYear = Long.parseLong(request.getParameter("movieReleaseYear"));
		String language = request.getParameter("movieLanguage");
		String director = request.getParameter("movieDirector");
		String rating = request.getParameter("movieRating");
		String specialFeature = request.getParameter("movieSpecialFeatures");
		
		// Checking Condition for language [Converted to Language ID]
		int langauge_id = 1;
		if(language.equals("Italian")) langauge_id = 2;
		else if(language.equals("French")) langauge_id = 5;
		else if(language.equals("German")) langauge_id = 6;
		else if(language.equals("Japanese")) langauge_id = 3;
		else if(language.equals("Mandarin")) langauge_id = 4;
		else if(language.equals("Mongolian")) langauge_id = 7;
		else if(language.equals("Hindi")) langauge_id = 10;
 
		// JDBC Variables Information
		Connection dbConnection = null;
		PreparedStatement prStmt = null;
		ResultSet rS = null;
		
		String url = "jdbc:mysql://localhost:3306/sakila?zeroDateTimeBehavior=convertToNull";
		String userName = "root";
		String passWord = "root";
		String query = "";
		
		try {
			
			// Registering JDBC Driver
			Class.forName("com.mysql.cj.jdbc.Driver");
			
			// Open a Connection
			dbConnection = DriverManager.getConnection(url, userName, passWord);
			if(dbConnection != null)	
				System.out.println("DB Connected!");
			
			// SQL Query String and Prepared Statement Generation
			query = "INSERT INTO film (title, description, release_year, language_id, director, rating, special_features)\r\n"
					+ "VALUES (?, ?, ?, ?, ?, ?, ?)";
			prStmt = dbConnection.prepareStatement(query);
			prStmt.setString(1, title);
			prStmt.setString(2, description);
			prStmt.setLong(3, releaseYear);
			prStmt.setString(4, langauge_id);
			prStmt.setString(5, director);
			prStmt.setString(6, rating);
			prStmt.setString(7, specialFeature);
			
			// Execute SQL Query
			System.out.println("Executing Query...");
			rS = prStmt.executeQuery();
			ArrayList<FilmPojo> arr = new ArrayList<>();
			
			// Extract Data from Result Set
			while(rS.next()) {
				
				FilmPojo obj = new FilmPojo();
				obj.setFilm_id(rS.getInt("film_id"));
				obj.setTitle(rS.getString("title"));
				obj.setDescription(rS.getString("description"));
				obj.setRelease_year(rS.getLong("release_year"));
				obj.setLanguage(rS.getString("language"));
				obj.setOriginal_language_id(rS.getInt("original_language_id"));
				obj.setRental_duration(rS.getInt("rental_duration"));
				obj.setRental_rate(rS.getDouble("rental_rate"));
				obj.setLength(rS.getLong("length"));
				obj.setReplacement_cost(rS.getDouble("replacement_cost"));
				obj.setRating(rS.getString("rating"));
				obj.setSpecial_features(rS.getString("special_features"));
				obj.setLast_update(rS.getDate("last_update"));
				obj.setDirector(rS.getString("director"));
				
				// Adding (Appending) Line by Line Parse of SQl Query
				arr.add(obj);	
			}
			
			// Converting the Same to JSON Object
			// Gson gson = new Gson();
			JSONObject responseData = new JSONObject();
			// String jsonData = gson.toJson(arr);
			PrintWriter documentOut = response.getWriter();
			response.setContentType("application/json");
			response.setCharacterEncoding("UTF-8");
			responseData.put("success", true);
			responseData.put("filmData", arr);
			responseData.put("totalCount", NumberOfEntries.noOfRows());
			documentOut.write(responseData.toString());
//			String jsonString = gson.toJson(responseData);
//			documentOut.write(jsonString);
			// documentOut.write(jsonString);
			documentOut.flush();
			System.out.println("Query Sucessful!");
			
			// Closing DB Connection
			rS.close();
			dbConnection.close();
			prStmt.close();
			
		}
		
		catch(Exception e) {
			
			e.printStackTrace();
			
		}
		
		finally {
			
			System.out.println("DB Connection Closed!");
			
		}
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
