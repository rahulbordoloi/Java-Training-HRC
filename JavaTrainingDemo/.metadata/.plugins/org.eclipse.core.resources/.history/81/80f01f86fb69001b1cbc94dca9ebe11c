// Code According to PRS

Ext.onReady(function() {
  Ext.create('Ext.form.Panel', {
    renderTo: document.body,
    title: 'Movie Advanced Search Panel',
    height: 100,
    width: 1600,
    bodyPadding: 20,

    defaultType: 'textfield',
	layout: {
        type: 'table',
    	columns: 2,
		style: {
                width: '100%',
            }
	},
	defaults: {
        width: '50%',
 		bodyStyle: 'padding:20px'
    },
    
	items: [{
            fieldLabel: 'Movie Name',
            name: 'movieName',
      		flex : 1,
       		xtype: 'textfield',
			style: 'text-align: left; margin-left: 200px;',
        },
        {
            fieldLabel: 'Director Name',
            name: 'dirName',
      		flex:1,
      		xtype: 'textfield',
			style: 'text-align: left; margin-left: 30px;',
       
        }]
	});
});




Ext.onReady(function() {
  Ext.create('Ext.form.Panel', {
    renderTo: document.body,
    marginTop:20,
    height: 100,
    width: 1600,
    bodyPadding: 10,
    defaultType: 'textfield',
	layout: {
        type: 'table',
    },
	style: {
                width: '100%'
            },
	defaults: {
        width: '50%'
    },

    items: [{
            xtype: 'datefield',
            fieldLabel: 'Release Year ',
            name: 'releaseYear',
      		flex:1,
			style: 'text-align: left; margin-left: 210px;',
        }, {
            fieldLabel: 'Language',
            name: 'dirName',
      		flex:1,
      		xtype: 'textfield',
      		xtype: 'combobox',
    		style: 'text-align: left; margin-left: 30px;',
        }]

	});
});


Ext.onReady(function() {
  Ext.create('Ext.form.Panel', {
    renderTo: document.body,
    
   
	layout: {
        type: 'hbox',
    },
 

	buttons: [{
    	xtype:'button',
    	text: 'Search',
    	handler: function(button){
      		var values = formPanel2.getForm().getValues();
      
      
      		Ext.Ajax.request({
        	method:'POST',
        	params:{
          		companyCode:values.companyCode,
          		customerName:values.customerName,
          		documentNumber:values.documentNumber,
          		invoiceId: values.invoiceId,
          		isOpenInvoice:values.isOpenInvoice,
          		paymentMethod:values.paymentMethod,
          		pk:pk
        },
        success:function(){
          Ext.toast( 'Your data is updated for '+values.customerName);
                     paging.reload();

        },
        failure: function(){
          Ext.toast('Your data could not be updated');
        }
        
      });
      win2.close();


    }
  	}, {
    	text: 'Reset',
    	handler: function(){
      	win2.close();
    	}
  	}],
  	buttonAlign: 'center',

	});
});


Ext.application({
  name : 'Rahul',

launch : function() {
    
    Ext.define('User', {
        extend: 'Ext.data.Model',
        fields: [ 'Title', 'Description', 'ReleaseYear', 'Language','Director','Rating','SpecialFeature']
    });
    
    var userStore = Ext.create('Ext.data.Store', {
        model: 'User',
        data: [
            { Title: 'The Shawshank Redemption', Description: 'Movie of Crime', ReleaseYear: '1994',Language:'English', Director:'X', Rating:'10', SpecialFeature:'Deleted Scenes' },
            { Title: 'The Wolf of Wall Street', Description: 'Movie of Wolf-Street', ReleaseYear: '2013', Language:'English', Director:'Y', Rating:'9', SpecialFeature:'Deleted Scenes' },
            { Title: 'Avengers: End Game', Description: 'Movie of Avengers', ReleaseYear: '2019', Language:'English', Director:'Z', Rating:'8', SpecialFeature:'Deleted Scenes' },
            { Title: 'Dabbang 2', Description: 'Movie of Selmon', ReleaseYear: '2012', Language:'Hindi', Director:'A', Rating:'1', SpecialFeature: 'Deleted Scenes' }
         ]
    });
    
    Ext.create('Ext.grid.Panel', {
        renderTo: Ext.getBody(),
        store: userStore,

      selModel: {
            selType: 'checkboxmodel',
            mode: 'MULTI',
            checkOnly: true,
            listeners: {
                select: function (model, record, index, eOpts) {
                    Ext.Msg.alert('You have Selected a Row!',  userStore.data.items[index].data['Description']);
            console.log('Name : ', userStore.data.items[index].data['Title'])
                }
            }
        },
        plugins: [{
            ptype: 'rowediting',
            clicksToEdit: 1
        }],
      pageSize:4,
        flex: 1,
        title: 'Movie DB Table',
        columns: [
            {
                text: 'Title',
                width: 200,
                dataIndex: 'Title',
            },
            {
                text: 'Description',
                width: 150,
                dataIndex: 'Description'
            },
            {
                text: 'Release Year',
                flex: 1,
                dataIndex: 'ReleaseYear'
            },
        {
                text: 'Language',
                flex: 1,
                dataIndex: 'Language'
            },
  {
                text: 'Director',
                flex: 1,
                dataIndex: 'Director'
            },
  {
                text: 'Rating',
                flex: 1,
                dataIndex: 'Rating'
            },

      {
        text: 'SpecialFeature',
                flex: 1,
                dataIndex: 'SpecialFeature'
        
      }],
        
    }); 
  }
});