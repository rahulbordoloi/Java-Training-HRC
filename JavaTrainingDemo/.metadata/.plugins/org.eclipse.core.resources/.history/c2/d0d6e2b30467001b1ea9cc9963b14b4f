/*Ext.create('Ext.grid.Panel', {
    store: userStore,
    columns: ...,
    dockedItems: [{
        xtype: 'pagingtoolbar',
        store: userStore,   // same store GridPanel is using
        dock: 'bottom',
        displayInfo: true
    }]
});
*/


Ext.application({
	name : 'Rohit',

	launch : function() {
		
		Ext.define('User', {
		    extend: 'Ext.data.Model',
		    fields: [ 'Character', 'Anime', 'SA', 'Phrase']
		});
		
		var userStore = Ext.create('Ext.data.Store', {
		    model: 'User',
		    data: [
		        { Character: 'Naruto', Anime: 'Naruto', SA: 'Rasengan', Phrase:'Dattebayo' },
		        { Character: 'Luffy', Anime: 'One Piece', SA: 'Gomu Gomu no', Phrase:'Meshi' },
		        { Character: 'Goku', Anime: 'DBZ', SA: 'Ka me ha me ha', Phrase:'Yo!' },
		        { Character: 'Saitama', Anime: 'One Punch Man', SA: 'Punch', Phrase:'....' },
				{ Character: 'Ichigo', Anime: 'Bleach', SA: 'Bankai', Phrase:'You want revenge?' },
				{ Character: 'Natsu', Anime: 'Fairy Tail', SA: 'Dragon Slayer', Phrase:'Travel sickness' },
				{ Character: 'Eren', Anime: 'Attack on Titan', SA: 'Titan', Phrase:'Its not my fault' },
				{ Character: 'Kirito', Anime: 'SAO', SA: 'Dual Sword', Phrase:'Lets go' },
				{ Character: 'Midoriya', Anime: 'My Hero Academia', SA: 'One For All', Phrase:'I am here' },
		   	]
		});
		
		Ext.create('Ext.grid.Panel', {
		    renderTo: Ext.getBody(),
		    store: userStore,
			selModel: {
		        selType: 'checkboxmodel',
		        mode: 'MULTI',
		        checkOnly: true,
		        listeners: {
		            select: function (model, record, index, eOpts) {
		                Ext.Msg.alert('', userStore.data.items[index].data['Character']);
						console.log(userStore.data.items[index].data['Character'])
		            }
		        }
		    },
		    plugins: [{
		        ptype: 'rowediting',
		        clicksToEdit: 1
		    }],
			pageSize:4,
		    flex: 1,
		    title: 'Anime',
		    columns: [
		        {
		            text: 'Character',
		            width: 200,
		            dataIndex: 'Character',
		            //flex: 1
		        },
		        {
		            text: 'Anime',
		            width: 150,
		            //flex: 1,
		            dataIndex: 'Anime'
		        },
		        {
		            text: 'SA',
		            flex: 1,
		            dataIndex: 'SA'
		        },
				{
		            text: 'Phrase',
		            flex: 1,
		            dataIndex: 'Phrase'
		        }
		    ],
		    
			bbar: [{
                xtype: 'pagingtoolbar',
				width: 950,
                bind:{
                    store: '{StudentListPagingStore}'
                },
                displayInfo: true,
                displayMsg: 'Displaying {0} to {1} of {2} &nbsp;records ',
                emptyMsg: "No records to display&nbsp;"
            }]
		});
		
	}
});